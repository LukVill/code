{
# print mean and sd
print(paste0("Mean -> ", mean(ls[[i]][[1]]), " SD -> ", sd(ls[[i]][[1]])))
res <- rbind(res,c(mean(ls[[i]][[1]]),sd(ls[[i]][[1]])))
}
# return matrix of mean and sd cols
as.data.frame(res)
}
# list of categories' sentiments
sent_list <- list(house_sent, fam_sent, other_sent, consumer_sent, work_sent, individual_sent, health_sent, income_sent, edu_sent, juv_sent)
res <- mean_sd_all(sent_list)
res
# function to list means and sd of all categories
# INPUT: list, col = index of col to calculate
mean_sd_all <- function(ls)
{
res <- numeric(0)
# for all elems in list
for(i in seq_along(ls))
{
# print mean and sd
print(paste0("Mean -> ", mean(ls[[i]][[1]]), " SD -> ", sd(ls[[i]][[1]])))
res <- rbind(res,c(mean(ls[[i]][[1]]),sd(ls[[i]][[1]])))
}
# return matrix of mean and sd cols
res <- as.data.frame(res)
names(res) <- c("Mean","SD")
res
}
# list of categories' sentiments
sent_list <- list(house_sent, fam_sent, other_sent, consumer_sent, work_sent, individual_sent, health_sent, income_sent, edu_sent, juv_sent)
res <- mean_sd_all(sent_list)
res
# add index col
cbind(seq_len(nrow(res)), res)
names(res)[1]
# add index col
res <- cbind(seq_len(nrow(res)), res)
names(res)[1]
names(res)[1] <- "Index"
res
res %>% arrange(desc(mean))
res %>% arrange(desc(Mean))
# sort high to low mean
res <- res %>% arrange(desc(Mean))
unique(sent_list$Category.x)
unique(senti_updated$Category.x)
names_categories <- unique(senti_updated$Category.x)
# make names of categories
names_categories <- unique(senti_updated$Category.x)
# sort high to low mean
res <- res %>% arrange(desc(Mean))
res
# sort the names
names_categories[res$Index]
res
res
names_categories
names_categories[-11]
# unsorted categories
names_categories[-11]
# sort the names
names_categories[res$Index]
# unsorted categories
names_categories[-11]
# t test two vectors, alt hyp: v1 > v2
greaterTTest <- function(v1, v2)
{
t.test(x = v1, y = v2, alternative = "g", var.equal = TRUE)
t.test(x = v1, y = v2, alternative = "g", var.equal = FALSE)
}
# sort the names
names_categories[res$Index]
greaterTTest(juv_sent, fam_sent)
greaterTTest(house_sent,edu_sent)
greaterTTest(juv_sent, fam_sent)
juv_sent
fam_sent
greaterTTest(juv_sent$sentiment, fam_sent$sentiment)
greaterTTest(juv_sent$sentiment, fam_sent$sentiment)
greaterTTest(juv_sent$sentiment, fam_sent$sentiment)
# t test two vectors, alt hyp: v1 > v2
greaterTTest <- function(v1, v2)
{
t.test(x = v1, y = v2, alternative = "g", var.equal = TRUE)
t.test(x = v1, y = v2, alternative = "g", var.equal = FALSE)
}
greaterTTest(juv_sent$sentiment, fam_sent$sentiment)
greaterTTest(juv_sent$sentiment, fam_sent$sentiment)
# t test two vectors, alt hyp: v1 > v2
greaterTTest <- function(v1, v2)
{
print(t.test(x = v1, y = v2, alternative = "g", var.equal = TRUE))
print(t.test(x = v1, y = v2, alternative = "g", var.equal = FALSE))
}
greaterTTest(juv_sent$sentiment, fam_sent$sentiment)
# sort the names
names_categories[res$Index]
greaterTTest(juv_sent$sentiment, fam_sent$sentiment)
greaterTTest(fam_sent$sentiment,other_sent$sentiment)
greaterTTest(fam_sent$sentiment,other_sent$sentiment)
greaterTTest(juv_sent$sentiment, other_sent$sentiment)
greaterTTest(juv_sent$sentiment, other_sent$sentiment)
greaterTTest(other_sent$sentiment,individual_sent$sentiment)
greaterTTest(individual_sent$sentiment,income_sent$sentiment)
#
greaterTTest(individual_sent$sentiment,income_sent$sentiment)
greaterTTest(fam_sent$sentiment,other_sent$sentiment)
greaterTTest(other_sent$sentiment,individual_sent$sentiment)
#
greaterTTest(individual_sent$sentiment,income_sent$sentiment)
greaterTTest(income_sent$sentiment, consumer_sent$sentiment)
greaterTTest(income_sent$sentiment, consumer_sent$sentiment)
greaterTTest(consumer_sent$sentiment, health_sent$sentiment)
greaterTTest(health_sent$sentiment, work_sent$sentiment)
greaterTTest(work_sent$sentiment, house_sent$sentiment)
greaterTTest(house_sent$sentiment,edu_sent$sentiment)
greaterTTest(juv_sent$sentiment, fam_sent$sentiment)
## special case needed to check
greaterTTest(juv_sent$sentiment, other_sent$sentiment)
greaterTTest(fam_sent$sentiment,other_sent$sentiment)
greaterTTest(other_sent$sentiment,individual_sent$sentiment)
# HIGH P VALUE
greaterTTest(individual_sent$sentiment,income_sent$sentiment)
greaterTTest(income_sent$sentiment, consumer_sent$sentiment)
# HIGH P VALUE
greaterTTest(consumer_sent$sentiment, health_sent$sentiment)
greaterTTest(health_sent$sentiment, work_sent$sentiment)
greaterTTest(work_sent$sentiment, house_sent$sentiment)
# HIGH P VALUE
greaterTTest(house_sent$sentiment,edu_sent$sentiment)
prop.test(x = c(39963, 130929), n = c(28487, 57040))
prop.test(x = c(39963, 130929), n = c(68450, 187969))
help(prop.test)
prop.test(x = c(39963, 130929), n = c(68450, 187969), alternative = "l")
# p checking: more female prop clients in divorced/sep than married/single
# female divorced/sep: 55438, total divorced/sep: 73724
# female married/single: 75783, total married/single: 113574
prop.test(x = c(55438,75783), y = c(73724, 113574), alternative = "g")
# p checking: more female prop clients in divorced/sep than married/single
# female divorced/sep: 55438, total divorced/sep: 73724
# female married/single: 75783, total married/single: 113574
prop.test(x = c(55438,75783), n = c(73724, 113574), alternative = "g")
# p checking: more female proportion clients in family households
# vs individual households
prop.test(x = c(39963, 130929), n = c(68450, 187969), alternative = "l")
# p checking: more female prop clients in divorced/sep than married/single
# female divorced/sep: 55438, total divorced/sep: 73724
# female married/single: 75783, total married/single: 113574
prop.test(x = c(55438,75783), n = c(73724, 113574), alternative = "g")
# p checking: female prop in clients that asked questions is
# equal to female prop total
# female prop asked ques: 101703, clients asked: 149096, female prop total: 185433, total: 280227
prop.test(x = c(101703, 185433), n = c(149096, 280227), alternative = "t")
# p checking: female prop in clients that asked questions is
# equal to female prop total
# female prop asked ques: 101703, clients asked: 149096, female prop total: 185433, total: 280227
prop.test(x = c(101703, 185433), n = c(149096, 280227), alternative = "l")
# p checking: female prop in clients that asked questions is
# equal to female prop total
# female prop asked ques: 101703, clients asked: 149096, female prop total: 185433, total: 280227
prop.test(x = c(101703, 185433), n = c(149096, 280227), alternative = "g")
# p checking: more female prop clients in divorced/sep than married/single
# female divorced/sep: 55438, total divorced/sep: 73724
# female married/single: 75783, total married/single: 113574
prop.test(x = c(55438,75783), n = c(73724, 113574), alternative = "g")
# p checking: more female proportion clients in family households
# vs individual households
prop.test(x = c(39963, 130929), n = c(68450, 187969), alternative = "l")
# p checking: less female proportion clients in individual households
# vs family households
prop.test(x = c(39963, 130929), n = c(68450, 187969), alternative = "l")
# p checking: more female prop clients in divorced/sep than married/single
# female divorced/sep: 55438, total divorced/sep: 73724
# female married/single: 75783, total married/single: 113574
prop.test(x = c(55438,75783), n = c(73724, 113574), alternative = "g")
rm()
ls()
rm(ls())
rm(list = ls())
setwd("C:/Users/lavil/source/repos/LukVill/code/R/stats101a/HW8")
install.packages("car")
install.packages("car")
install.packages("car")
library(tidyverse)
library(tidyverse)
library(MASS)
library(car)
realty <- read.csv(paste0(getwd(),"/realty.txt"))
glimpse(realty)
realty <- read.delim(paste0(getwd(),"/realty.txt"), sep = "\t")
realty <- read.delim(paste0(getwd(),"/realty.txt"), sep = "\t")
glimpse(realty)
table(realty$type)
realty2 <- filter(realty,type=="Condo/Twh"|type=="SFR")%>%filter(sqft>0&bath>0)
realty3 <-realty2%>%mutate(lprice=log(price))
library(tidyverse)
library(MASS)
library(car)
realty <- read.delim(paste0(getwd(),"/realty.txt"), sep = "\t")
glimpse(realty)
table(realty$type)
realty2 <- filter(realty,type=="Condo/Twh"|type=="SFR")%>%filter(sqft>0&bath>0)
realty3 <-realty2%>%mutate(lprice=log(price))
glimpse(realty3)
m1 <- lm(lprice ~ city + bed + bath + sqft, realty3)
summary(m1)
unique(realty3$city)
m1<- lm(price~city+bed+bath+sqft,realty)
summary(m1)
m1<- lm(price~city+bed+bath+sqft,realty2)
summary(m1)
m1 <- lm(lprice ~ city + bed + bath + sqft, realty3)
m1 <- lm(lprice ~ city + bed + bath + sqft, realty3)
summary(m1)
unique(realty3$city)
m1 <- lm(price ~ city + bed + bath + sqft, realty3)
summary(m1)
unique(realty3$city)
m1 <- lm(lprice ~ city + bed + bath + sqft, realty3)
summary(m1)
unique(realty3$city)
m1 <- lm(lprice ~ city + bed + bath + sqft, realty3)
m1 <- lm(price ~ city + bed + bath + sqft, realty3)
summary(m1)
unique(realty3$city)
m1 <- lm(lprice ~ city + bed + bath + sqft, realty3)
summary(m1)
unique(realty3$city)
10^-4
10^-4/(5/3)
10^-4/(5/3)/(ln(0.4))
10^-4/(5/3)/(log(0.4))
10^-4/(5/3)
log(10^-4/(5/3))/(log(0.4))
(0.75*10^-5)/(-pi*log(1/4))
log(0.75*10^-5)/(-pi*log(1/4))
log(0.75*10^-5/-pi)/log(1/4)
log(0.75*10^-5/-pi)
pi
-pi
10^-5
log(0.75*10^-5/pi)/log(1/4)
0.75*10^-5/pi
m2 <- lm(lprice ~ city + bath + sqft, realty3)
summary(m2)
help(update)
update(m1,.~. - bed)
rm(m2)
summary(update(m1,.~. - bed))
library(lattice)
help(xyplot)
xyplot(lprice ~ bath, realty3)
xyplot(lprice ~ bath|bed, realty3)
xyplot(|lprice ~ bath|bed, realty3)
xyplot(lprice ~ bath|bed, realty3)
plot(lprice ~ bath|bed, realty3)
xyplot(lprice ~ bath|bed, realty3)
xyplot(lprice ~ bath|bed, realty3)
library(lattice)
xyplot(lprice ~ bath|bed, realty3)
summary(m1)
xyplot(price ~ sqft | city, realty3)
xyplot(lprice ~ sqft | city, realty3)
msmall <- lm(price~bed+bath+sqft,data=realty3)
msmall.log <- lm(lprice~bed+bath+sqft, data=realty3)
mmps(msmall)
library(car)
msmall <- lm(price~bed+bath+sqft,data=realty3)
msmall.log <- lm(lprice~bed+bath+sqft, data=realty3)
mmps(msmall)
car::mmps(msmall)
car::mmps(msmall.log)
help(mmps)
mmps(msmall, terms = ~.)
mmps(msmall, groups = city)
mmps(msmall, groups = c(bed,bath,sqft))
mmps(msmall)
cars::mmps(msmall)
library(cars)
install.packages("cars")
car::mmps(msmall)
msmall <- lm(price~bed+bath+sqft,data=realty3)
msmall.log <- lm(lprice~bed+bath+sqft, data=realty3)
mmps(msmall)
mmps(msmall.log)
mmps(msmall)
mmps(msmall.log)
mmps(msmall)
mmps(msmall.log)
mmps(msmall)
mmps(msmall)
mmps(msmall)
mmps(msmall.log)
salary <- read.csv(paste0(getwd(),"/salary.csv"))
glimpse(salary)
summary(lm(Salary ~ Expernc + Gender))
summary(lm(Salary ~ Expernc + Gender, salary))
summary(lm(Salary ~ Expernc + Gender + Expernc:Gender, salary))
summary(lm(Salary ~ Expernc + Gender, salary))
summary(lm(Salary ~ Expernc + Gender[Gender != "Male"], salary))
summary(lm(Salary ~ Expernc + Gender, salary[Gender != "male"]))
summary(lm(Salary ~ Expernc + Gender, salary[Gender != "Male"]))
glimpse(salary)
salary[Gender != "Male"]
salary.female <- salary %>% filter(Gender == "Female")
salary.male <- salary %>% filter(Gender == "Male")
salary.female <- salary %>% filter(Gender == "Female")
summary(lm(Salary ~ Expernc + Gender, salary.male))
salary.male
summary(lm(Salary ~ Expernc + Gender, salary))
36724.0-4670.5
summary(lm(Salary ~ Expernc + Gender, salary))
library(tidyverse)
library(MASS)
library(car)
realty <- read.delim(paste0(getwd(),"/realty.txt"), sep = "\t")
glimpse(realty)
table(realty$type)
realty2 <- filter(realty,type=="Condo/Twh"|type=="SFR")%>%filter(sqft>0&bath>0)
realty3 <-realty2%>%mutate(lprice=log(price))
glimpse(realty3)
m1 <- lm(lprice ~ city + bed + bath + sqft, realty3)
summary(m1)
unique(realty3$city)
summary(update(m1,.~. - bed))
library(lattice)
xyplot(lprice ~ bath|bed, realty3)
xyplot(lprice ~ sqft | city, realty3)
msmall <- lm(price~bed+bath+sqft,data=realty3)
msmall.log <- lm(lprice~bed+bath+sqft, data=realty3)
mmps(msmall)
mmps(msmall.log)
summary(lm(Salary ~ Expernc + Gender, salary))
summary(lm(Salary ~ Expernc + Gender + Expernc:Gender, salary))
library(tidyverse)
library(MASS)
library(car)
realty <- read.delim(paste0(getwd(),"/realty.txt"), sep = "\t")
glimpse(realty)
table(realty$type)
realty2 <- filter(realty,type=="Condo/Twh"|type=="SFR")%>%filter(sqft>0&bath>0)
realty3 <-realty2%>%mutate(lprice=log(price))
glimpse(realty3)
m1 <- lm(lprice ~ city + bed + bath + sqft, realty3)
summary(m1)
unique(realty3$city)
summary(update(m1,.~. - bed))
library(lattice)
xyplot(lprice ~ bath|bed, realty3)
xyplot(lprice ~ sqft | city, realty3)
msmall <- lm(price~bed+bath+sqft,data=realty3)
msmall.log <- lm(lprice~bed+bath+sqft, data=realty3)
mmps(msmall)
mmps(msmall.log)
salary <- read.csv(paste0(getwd(),"/salary.csv"))
glimpse(salary)
summary(lm(Salary ~ Expernc + Gender, salary))
summary(lm(Salary ~ Expernc + Gender + Expernc:Gender, salary))
coeff(lm(Salary ~ Expernc + Gender + Expernc:Gender, salary))
coef(lm(Salary ~ Expernc + Gender + Expernc:Gender, salary))
summary(lm(Salary ~ Expernc + Gender + Expernc:Gender, salary))
salary.femaleFirst <- salary %>% transmute(relevel(Gender, "Female"))
salary.femaleFist <- salary
salary.femaleFist$Gender <- relevel(salary.femaleFist$Gender, "Female")
library(tidyverse)
library(MASS)
library(car)
realty <- read.delim(paste0(getwd(),"/realty.txt"), sep = "\t")
glimpse(realty)
table(realty$type)
realty2 <- filter(realty,type=="Condo/Twh"|type=="SFR")%>%filter(sqft>0&bath>0)
realty3 <-realty2%>%mutate(lprice=log(price))
glimpse(realty3)
m1 <- lm(lprice ~ city + bed + bath + sqft, realty3)
summary(m1)
unique(realty3$city)
summary(update(m1,.~. - bed))
library(lattice)
xyplot(lprice ~ bath|bed, realty3)
xyplot(lprice ~ sqft | city, realty3)
msmall <- lm(price~bed+bath+sqft,data=realty3)
msmall.log <- lm(lprice~bed+bath+sqft, data=realty3)
mmps(msmall)
mmps(msmall.log)
salary <- read.csv(paste0(getwd(),"/salary.csv"), stringsAsFactors = TRUE)
glimpse(salary)
summary(lm(Salary ~ Expernc + Gender, salary))
summary(lm(Salary ~ Expernc + Gender + Expernc:Gender, salary))
salary.femaleFist <- salary
salary.femaleFist$Gender <- relevel(salary.femaleFist$Gender, "Female")
summary(lm(Salary ~ Expernc + Gender + Expernc:Gender, salary))
salary.femaleFirst <- salary
salary.femaleFirst$Gender <- relevel(salary.femaleFist$Gender, "Female")
summary(lm(Salary ~ Expernc + Gender + Expernc:Gender, salary.femaleFirst))
summary(lm(Salary ~ Expernc + Gender + Expernc:Gender, salary.femaleFirst))
summary(lm(Salary ~ Expernc + Gender + Expernc:Gender, salary))
summary(lm(Salary ~ Expernc + Gender + Expernc:Gender, salary))
salary.maleFirst <- salary
salary.maleFirst$Gender <- relevel(salary.maleFirst$Gender, "Male")
summary(lm(Salary ~ Expernc + Gender + Expernc:Gender, salary.maleFirst))
summary(lm(Salary ~ Expernc + Gender + Expernc:Gender, salary))
summary(lm(Salary ~ Expernc + Gender + Expernc:Gender, salary.maleFirst))
summary(lm(Salary ~ Expernc + Gender + Expernc:Gender, salary))
0.492+0.1519
summary(lm(Salary ~ Expernc + Gender + Expernc:Gender, salary))
summary(lm(Salary ~ Expernc + Gender + Gender:Expernc, salary))
summary(lm(Salary ~ Expernc + Gender + Expernc:Gender, salary))
summary(lm(Salary ~ Expernc + Expernc:Gender, salary))
817.1-213.3
mmps(lm(Salary ~ Expernc + Expernc:Gender, salary))
131+16+16+12
167-131
0.36*125
setwd("C:/Users/lavil/source/repos/LukVill/code/R/stats101a/HW9")
diet <- read.csv(paste0(getwd(),"/dietstudy.csv"))
library(tidyverse)
library(car)
glimpse(diet)
diet <- diet %>% select(DIET, AGE, SEX, WEIGHT_0, DROPOUT2, WEIGHT_2, ADHER_2)
diet %>% select(DIET, AGE, SEX, WEIGHT_0, DROPOUT2, WEIGHT_2, ADHER_2)
glimpse(diet)
diet %>% select(DIET, AGE)
diet %>% select(DIET)
help(select)
diet %>% select(c(DIET, AGE, SEX, WEIGHT_0, DROPOUT2, WEIGHT_2, ADHER_2))
diet <- read.csv(paste0(getwd(),"/dietstudy.csv"))
glimpse(diet)
library(tidyverse)
diet %>% filter(ADHER_4 > 1)
diet %>% select(AGE)
library(dplyr)
library(tidyverse)
library(dplyr)
library(car)
diet <- read.csv(paste0(getwd(),"/dietstudy.csv"))
glimpse(diet)
diet %>% select(AGE)
diet <- read.csv(paste0(getwd(),"/dietstudy.csv"))
glimpse(diet)
diet %>% select("DIET", "AGE", "SEX", "WEIGHT_0", "DROPOUT2", "WEIGHT_2", "ADHER_2")
diet %>% select(c("DIET", "AGE", "SEX", "WEIGHT_0", "DROPOUT2", "WEIGHT_2", "ADHER_2"))
diet %>% dplyr::select(c("DIET", "AGE", "SEX", "WEIGHT_0", "DROPOUT2", "WEIGHT_2", "ADHER_2"))
library(tidyverse)
diet <- read.csv(paste0(getwd(),"/dietstudy.csv"))
glimpse(diet)
diet %>% select(c("DIET", "AGE", "SEX", "WEIGHT_0", "DROPOUT2", "WEIGHT_2", "ADHER_2"))
library(tidyverse)
library(car)
diet <- read.csv(paste0(getwd(),"/dietstudy.csv"))
glimpse(diet)
diet %>% dplyr::select(c("DIET", "AGE", "SEX", "WEIGHT_0", "DROPOUT2", "WEIGHT_2", "ADHER_2"))
diet <- diet %>% dplyr::select(c("DIET", "AGE", "SEX", "WEIGHT_0", "DROPOUT2", "WEIGHT_2", "ADHER_2"))
diet <- read.csv(paste0(getwd(),"/dietstudy.csv"))
glimpse(diet)
diet <- diet %>% dplyr::select(c("DIET", "AGE", "SEX", "WEIGHT_0", "DROPOUT2", "WEIGHT_2", "ADHER_2"))
diet %>% dplyr::mutate(wtchange = WEIGHT_2 - WEIGHT_0)
diet <- diet %>% dplyr::mutate(wtchange = WEIGHT_2 - WEIGHT_0)
table(DIET, data = diet)
help(table)
help(table)
table(diet)
table(diet, DIET)
table(DIET, diet)
table(diet$DIET)
glimpse(diet)
diet %>% group_by(DIET) %>% summarise(sum = sum(wtchange))
wtchangegraph <- diet %>% group_by(DIET) %>% summarise(sum = sum(wtchange))
diet %>% group_by(DIET) %>% summarise(sum = sum(wtchange))
ggplot(wtchangegraph) + geom_bar(aes(DIET, sum))
ggplot(wtchangegraph) + geom_bar(aes(DIET))
ggplot(wtchangegraph) + geom_bar(aes(y = sum))
ggplot(wtchangegraph) + geom_bar(aes(DIET,sum), stat = "identity")
wtchangegraph <- diet %>% group_by(DIET) %>% summarise(sum = abs(sum(wtchange)))
ggplot(wtchangegraph) + geom_bar(aes(DIET,sum), stat = "identity")
ggplot(wtchangegraph) + geom_bar(aes(DIET,sum), stat = "identity") + labs(x = "Diet Type", y = "|Sum of Weight Change|")
diet %>% filter(wtchange == 0)
t <- diet %>% filter(wtchange == 0)
diet %>% filter(wtchange == 0)
any(t$DROPOUT2 == "no")
any(t$DROPOUT2 == "yes")
dropout <- diet %>% filter(wtchange == 0)
any(dropout$DROPOUT2 == "no")
diet %>% filter(wtchange != 0)
diet <- diet %>% filter(wtchange != 0)
any(diet$wtchange == 0)
diet <- diet %>% filter(wtchange != 0)
glimpse(diet)
m <- lm(wtchange ~ AGE + DIET + SEX + WEIGHT_0 + ADHER_2)
m <- lm(wtchange ~ AGE + DIET + SEX + WEIGHT_0 + ADHER_2, diet)
m
summary(m)
unique(diet$DIET)
summary(m)
summary(update(m, .~. + DIET:ADHER_2))
summary(lm(Salary ~ Expernc + Expernc:Gender, salary))
summary(update(m, .~. + DIET:ADHER_2))
summary(update(m, .~. + WEIGHT_0:ADHER_2))
summary(update(m, .~. + DIET:ADHER_2))
help(xyplot)
help(powerTransform)
powerTransform(m)
m
abs(m)
powerTransform(msmall)
boxcox(msmall)
summary(boxcox(msmall))
summary(powerTransform(msmall))
summary(powerTransform(msmall))
summary(powerTransform(msmall.log))
summary(powerTransform(msmall))
summary(powerTransform(msmall.log))
